######################################################################
#                                                                    #
#    Docker-compose file for testing in a ci-environment.            #
#                                                                    #
#    For functional/e2e-tests, add your external services here and   #
#    link them to the service "app", e.g. like this example          #
#                                                                    #
######################################################################

version: '3.7'
services:
  app:
    # leave this intact
    image: "${IMAGE_NAME}:${CIRCLE_SHA1}"
    # add your dependent services here
    # If you need to wait for a service to be *READY* (e.g. rabbitmq)
    # 1. add this to your dockerfile:
    #
    # ADD https://github.com/ufoscout/docker-compose-wait/releases/download/2.4.0/wait /wait
    # RUN chmod +x /wait
    #
    # 2. add in this file to environment of "app"
    # WAIT_HOSTS: <dependent_service_name>:<port of that service>
    #
    # 3. make sure that your scripts/test is up-to-date (executing /wait)
    #
    depends_on:
      - e2e_mongo
      - e2e_postgres
    # leave this intact
    networks:
      - main
    # change this to standard docker-compose-v1 inferred ENVS for legacy codebases
    # for more info, see this: https://docs.docker.com/compose/link-env-deprecated
    environment:
      MONGO_PORT_27017_TCP_ADDR: "e2e_mongo"
      POSTGRES_PORT_5432_TCP_ADDR: "e2e_postgres"

  # example how to add another service, things to look out for:
  # 1. expose the ports correctly
  # 2. join the main-network, so its visible in "app"
  #
  # Notes about other docker-image-repositories:
  # [gcr.io] for images hosted on gcr.io, execute the command "style/authenticate_gcs"
  # before testing
  #
  # [other] Other repositories are *NOT* authenticated, only public ones are allowed,
  # e.g. docker.elastic.co/elasticsearch/elasticsearch:6.3.0
  #
  e2e_mongo:
    image: "mongo:3.6"
    ports:
      - "27017:27017"
    networks:
      - main
  e2e_postgres:
    image: "postgres:9.6-alpine"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
    networks:
      - main

# leave this intact
networks:
  main:
    driver: bridge
